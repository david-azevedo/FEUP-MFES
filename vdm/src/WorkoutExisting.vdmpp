class WorkoutExisting is subclass of Workout
/**
The subclass for a workout which repets a previously seen route
**/
instance variables
	
	-- The points the user still has to go through
	private remainingRoute: Types`Route;
	-- The last point passed by the user
	private lastPoint: [Types`Point];
	-- The total traveled distance during the workout
	private traveledDistance: real;
	
operations

	--WorkoutExisting's constructor
	public WorkoutExisting: Types`Timestamp * Types`Route ==> WorkoutExisting
	WorkoutExisting(t, r) == (
		traveledDistance := 0;
		threshold:= 5;
		route:= r;
		remainingRoute := r;
		lastPoint:= nil;
		atomic (
		startTime:= t;
		endTime := t
		);
		return self
	)
	post startTime = endTime and startTime = t;
	
	--Checks if the workout is finished
	public isFinished: () ==> bool
	isFinished() == 
	(
		return len remainingRoute.route = 0
	)
	pre len remainingRoute.route >= 0
	post len remainingRoute.route >= 0;
	
	--Returns the last point
	public getLastPoint: () ==> [Types`Point]
	getLastPoint() ==
	(
		if len remainingRoute.route > 0 then
			return hd remainingRoute.route
		else
			return nil;
	);
	
	--Updates the distance made by the user
	private updateDistance: Types`Point ==> ()
	updateDistance (point) ==
	(
		if lastPoint <> nil then
			traveledDistance := traveledDistance + 
													Math`distance(lastPoint, point);
		
		lastPoint := point;
	)
	post lastPoint <> nil;
	
	--Updates the state of the workout given a GPS update
	public newGPSPosition: Types`Point ==> ()
	newGPSPosition(point) == 
	(
		if insideOfThreshold(point) then
		(
			updateDistance(point);
			remainingRoute.route := tl remainingRoute.route;
		);		
	)
	-- The remaining points must remain a subset of the total route's elements
	post len remainingRoute.route <= len remainingRoute~.route and
		elems remainingRoute.route subset elems route.route;
	
	--Returns the total traveled distance
	public getDistance: () ==> nat
	getDistance() == 
	(
		return traveledDistance;
	)
	pre traveledDistance >= 0
	post traveledDistance >= 0;
	
end WorkoutExisting